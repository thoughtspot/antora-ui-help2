{"version":3,"sources":["../src/utils/isBrowser.js","../src/utils/debounce.js","../src/utils/isFunction.js","../src/utils/getStyleComputedProperty.js","../src/utils/getParentNode.js","../src/utils/getScrollParent.js","../src/utils/getReferenceNode.js","../src/utils/isIE.js","../src/utils/getOffsetParent.js","../src/utils/isOffsetContainer.js","../src/utils/getRoot.js","../src/utils/findCommonOffsetParent.js","../src/utils/getScroll.js","../src/utils/includeScroll.js","../src/utils/getBordersSize.js","../src/utils/getWindowSizes.js","../src/utils/getClientRect.js","../src/utils/getBoundingClientRect.js","../src/utils/getOffsetRectRelativeToArbitraryNode.js","../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/utils/isFixed.js","../src/utils/getFixedPositionOffsetParent.js","../src/utils/getBoundaries.js","../src/utils/computeAutoPlacement.js","../src/utils/getReferenceOffsets.js","../src/utils/getOuterSizes.js","../src/utils/getOppositePlacement.js","../src/utils/getPopperOffsets.js","../src/utils/find.js","../src/utils/findIndex.js","../src/utils/runModifiers.js","../src/methods/update.js","../src/utils/isModifierEnabled.js","../src/utils/getSupportedPropertyName.js","../src/methods/destroy.js","../src/utils/getWindow.js","../src/utils/setupEventListeners.js","../src/methods/enableEventListeners.js","../src/utils/removeEventListeners.js","../src/methods/disableEventListeners.js","../src/utils/isNumeric.js","../src/utils/setStyles.js","../src/utils/setAttributes.js","../src/modifiers/applyStyle.js","../src/utils/getRoundedOffsets.js","../src/modifiers/computeStyle.js","../src/utils/isModifierRequired.js","../src/modifiers/arrow.js","../src/utils/getOppositeVariation.js","../src/methods/placements.js","../src/utils/clockwise.js","../src/modifiers/flip.js","../src/modifiers/keepTogether.js","../src/modifiers/offset.js","../src/modifiers/preventOverflow.js","../src/modifiers/shift.js","../src/modifiers/hide.js","../src/modifiers/inner.js","../src/modifiers/index.js","../src/methods/defaults.js","../src/index.js"],"names":["e","window","document","navigator","t","longerTimeoutBrowsers","let","i","length","isBrowser","userAgent","indexOf","o","called","Promise","resolve","then","n","scheduled","setTimeout","supportsMicroTasks","r","p","functionToCheck","getType","toString","call","d","element","nodeType","css","ownerDocument","defaultView","getComputedStyle","property","s","nodeName","parentNode","host","f","body","overflow","overflowX","overflowY","getStyleComputedProperty","test","getScrollParent","getParentNode","a","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","h","version","l","c","documentElement","noOffsetParent","isIE","offsetParent","nextElementSibling","getOffsetParent","firstElementChild","g","node","getRoot","b","end","commonAncestorContainer","element1root","element1","element2","start","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","range","createRange","setStart","setEnd","contains","isOffsetContainer","findCommonOffsetParent","w","side","upperSide","scrollingElement","html","y","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","E","sideA","axis","sideB","parseFloat","styles","Math","max","parseInt","computedStyle","v","height","getSize","width","O","Object","assign","arguments","prototype","hasOwnProperty","L","offsets","S","rect","getBoundingClientRect","result","sizes","getWindowSizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getBordersSize","getClientRect","fixedPosition","runIsIE","isHTML","parent","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","u","marginLeft","includeScroll","excludeScroll","relativeOffset","getOffsetRectRelativeToArbitraryNode","innerWidth","innerHeight","C","isFixed","N","parentElement","el","P","boundaries","getFixedPositionOffsetParent","getReferenceNode","boundariesElement","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","popper","isPaddingNumber","padding","B","H","placement","getBoundaries","rects","refRect","sortedAreas","keys","map","key","getArea","sort","area","filteredAreas","filter","computedPlacement","variation","split","W","k","x","marginBottom","marginRight","A","hash","replace","matched","M","popperRect","getOuterSizes","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","referenceOffsets","getOppositePlacement","F","Array","find","arr","I","match","findIndex","cur","obj","R","modifiers","ends","slice","forEach","console","warn","fn","enabled","isFunction","data","U","this","state","isDestroyed","instance","arrowStyles","attributes","flipped","getReferenceOffsets","options","positionFixed","computeAutoPlacement","flip","originalPlacement","getPopperOffsets","position","runModifiers","isCreated","onUpdate","onCreate","Y","some","name","V","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","j","isModifierEnabled","removeAttribute","willChange","getSupportedPropertyName","disableEventListeners","removeOnDestroy","removeChild","K","isBody","target","addEventListener","passive","q","push","z","updateBound","scrollElement","scrollParents","eventsEnabled","G","setupEventListeners","scheduleUpdate","_","removeEventListener","X","cancelAnimationFrame","removeEventListeners","J","isNaN","isFinite","Q","prop","unit","isNumeric","Z","value","setAttribute","$","arrowElement","ee","te","round","floor","noRound","referenceWidth","popperWidth","isVertical","isVariation","horizontalToInteger","verticalToInteger","bothOddWidth","isFirefox","ne","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","getRoundedOffsets","devicePixelRatio","oe","prefixedProperty","m","invertTop","invertLeft","x-placement","arrow","ie","requesting","isRequired","requested","re","isModifierRequired","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","pe","de","validPlacements","placements","fe","counter","index","concat","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","le","placementOpposite","flipOrder","behavior","clockwise","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","me","he","str","size","ce","useHeight","fragments","offset","frag","trim","divider","search","splitRegex","ops","mergeWithPrevious","op","reduce","toValue","index2","ue","basePlacement","parseOffset","ge","transformProp","popperStyles","priority","check","primary","escapeWithReference","secondary","be","shiftvariation","shiftOffsets","we","bound","hide","ye","subtractLength","Ee","shift","preventOverflow","keepTogether","inner","computeStyle","applyStyle","onLoad","xe","ve","constructor","requestAnimationFrame","update","debounce","bind","Popper","Defaults","jquery","modifierOptions","enableEventListeners","destroy","Utils","global","PopperUtils"],"mappings":"AAAA,IAAAA,EAAiC,aAAlB,OAAOC,QAA8C,aAApB,OAAOC,UAAiD,aAArB,OAAOC,UAA1F,MAAAC,EAAA,WAAA,ICGQC,EAAAA,CAAAA,OAAAA,UAAAA,WAAAA,IACDC,IAAIC,EAAI,EAAGA,EAAIF,EAAsBG,OAAQD,GAAK,EAAA,GACjDE,GAAsE,GAAzDN,UAAUO,UAAUC,QAAQN,EAAAA,EAA5BF,EAAAA,OACR,EAAA,OAGJ,CAPgB,EAAA,EAUzB,SAAAS,EAAAZ,GAAsCM,IAChCO,EAAAA,CAAAA,EAAAA,MACG,KAAMT,IAAAA,EAAA,CAAA,EAAAH,OAKJa,QAAQC,QAAAA,EAAUC,KAAK,KAAMZ,EAAA,CAAA,EAAAJ,EAAA,CAApC,CAAA,EALF,CAAA,CAYF,SAAAiB,EAAAjB,GAAiCM,IAC3BY,EAAAA,CAAAA,EAAAA,MACG,KAAMN,IAAAA,EAAA,CAAA,EAAAO,WAGE,KAAMP,EAAA,CAAA,EAAAZ,EAAA,CAAjB,EAAAI,CAAA,EAHJ,CAAA,CAWF,MAAMgB,EAAqBX,GAAaR,OAAOa,QAY/C,IAAAO,EAAgBD,EAAAA,EAAAA,EC5ChB,SAAAE,EAAAtB,GAAoD,OAGhDuB,GAC2C,sBAA3CC,GAAQC,SAASC,KAAjBF,CAAAA,CAAAA,CCJJ,SAAAG,EAAA3B,EAAAI,GAAoE,OACzC,IAArBwB,EAAQC,SAAAA,IAKNC,EADSF,EAAQG,cAAcC,YAClBC,iBAAPhC,EAAiC,IAAjCA,EACLiC,EAAWJ,EAAAA,GAAXI,EAAAA,CCPT,SAAAC,EAAAnC,GAA+C,MACpB,SAArB4B,EAAQQ,SADiCpC,EAItC4B,EAAQS,YAAcT,EAAQU,IAAAA,CCDvC,SAAAC,EAAAvC,GAAiD,GAE3C,CAAAA,EAAA,OACKE,SAASsC,KAAAA,OAGVZ,EAAQQ,UAAAA,IACT,OAAA,IACA,OAAA,OACIR,EAAQG,cAAcS,KAAAA,IAC1B,YAAA,OACIZ,EAAQY,IAAAA,CAAAA,GAIb,CAAEC,SAAAA,EAAUC,UAAAA,EAAWC,UAAAA,CAAvB,EAAqCC,EAAAA,CAAAA,EAfI,MAgB3C,wBAAwBC,KAAKJ,EAAAA,EAAAA,CAA7B,EAhB2CzC,EAoBxC8C,EAAgBC,EAAAA,CAAAA,CAAhBD,CAAAA,CCvBT,SAAAE,EAAAhD,GAAoD,OAC3CiD,GAAaA,EAAUC,cAAgBD,EAAUC,cAAjDD,CAAAA,CAAAA,MCNHE,EAAS1C,GAAa,EAAGR,CAAAA,OAAOmD,sBAAwBlD,CAAAA,SAASmD,cACjEC,EAAS7C,GAAa,UAAUoC,KAAK1C,UAAUO,SAAzB,EAS5B,SAAA6C,EAAAvD,GAAsC,OACpB,KAAZwD,EADgCC,EAIpB,KAAZD,GAGGL,GAAAA,CAAAA,CCVT,SAAAO,EAAA1D,GAAiD,GAC3C,CAAAA,EAAA,OACKE,SAASyD,gBAAAA,IAGZC,EAAiBC,EAAK,EAALA,EAAW3D,SAASsC,KAAO,KAAAlC,IAG9CwD,EAAelC,EAAQkC,cAAgB,KARI,KAUxCA,IAAAA,GAAmClC,EAAQmC,oBAVHnD,GAW7BgB,EAAUA,EAAQmC,oBAAoBD,aAAAA,IAGlD1B,EAAW0B,GAAgBA,EAAa1B,SAdC,OAgB3CnB,GAA0B,SAAbmB,GAAoC,SAAbA,EAOmB,CAAC,IAA1D,CAAA,KAAA,KAAA,SAAsBzB,QAAQmD,EAAa1B,QAA3C,GACuD,WAAvDQ,EAAAA,EAAuC,UAAvCA,EAEOoB,EAAAA,CAAAA,EA1BsCpD,GAiBtCgB,EAAUA,EAAQG,cAAgC7B,UAAlByD,eAA2BA,CAAAA,SAAAA,EAAAA,GCxBnB,IACzCvB,EAAFpC,EAAEoC,YADyC,MAEhC,SAAbA,IAIW,SAAbA,GAAuB4B,EAAgBpC,EAAQqC,iBAAxBD,IAAAA,EANwB,CCKnD,SAAAE,EAAAlE,GAAsC,OACZ,OAApBmE,EAAK9B,WAD2BrC,EAE3BoE,EAAQD,EAAK9B,UAAb+B,CAAAA,CCGX,SAAAC,EAAArE,EAAAI,GAAmE,IAW3DkE,EAMEC,EAgBFC,EAjC2D,OAE7DxE,GAAcyE,EAAS5C,UAAYzB,GAAcsE,EAAS7C,UAQxD8C,GAHAC,EACJH,EAASI,wBAATJ,CAAAA,EACAK,KAAKC,6BACOH,EAAAA,EACRN,EAAMM,EAAAA,EAAAA,EAMJL,IAHFS,EAAQ9E,SAAS+E,YAAT/E,GACRgF,SAAAA,EAAgB,CAAA,EAf2C7D,EAgB3D8D,OAAAA,EAAY,CAAA,EACZ9D,GAAEkD,2BAILE,IAAAA,GACCC,IAAAA,GACFC,EAAMS,SAANT,CAAAA,EAEIU,EAAAA,CAAAA,EAAAA,EAIGrB,EAAAA,CAAAA,GAIHQ,EAAeJ,EAAAA,CAAAA,GACJ9B,KACRgD,EAAuBd,EAAalC,KAApCgD,CAAAA,EAEAA,EAAAA,EAAiClB,EAAAA,CAAAA,EAAkB9B,IAAnDgD,GAlCApF,SAASyD,eAkCT2B,CCzCX,SAAAC,EAAAvF,EAA2CwF,EAAO,OAAO,MACjDC,EAAqB,QAATD,EAAiB,YAAc,aAC3CpD,EAAWR,EAAQQ,SAAAA,GAER,SAAbA,GAAoC,SAAbA,EAGlBsD,OAGF9D,EAAAA,GANyC,CAAA,MACxC+D,EAAO/D,EAAQG,cAAc4B,gBAC7B+B,EAAmB9D,EAAQG,cAAc2D,kBAAtB9D,EAAAA,OAClB8D,EAAAA,EAAAA,CAGF9D,CCPT,SAAAgE,EAAA5F,EAAAI,EAAqDyF,EAAAA,CAAAA,GAAkB,IAC/DC,EAAYC,EAAAA,EAAmB,KAAnBA,EACZC,EAAaD,EAAAA,EAAmB,MAAnBA,EACbE,EAAWJ,EAAW,CAAC,EAAI,EAAA,OAAA7F,EAC5BkG,KAAOJ,EAAAA,EAAAA,EACPK,QAAUL,EAAAA,EAAAA,EACVM,MAAQJ,EAAAA,EAAAA,EACRK,OAASL,EAAAA,EAAAA,CAAAA,CCRhB,SAAAM,EAAAtG,EAAAI,GAAqD,IAC7CmG,EAAiB,MAATC,EAAe,OAAS,MAChCC,EAAkB,QAAVF,EAAmB,QAAU,SAAA,OAGzCG,WAAWC,WAAQ/F,SAAnB8F,EACAA,WAAWC,WAAQ1F,SAAnByF,CAAAA,CAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GCd8C,OACzCE,KAAKC,IACVrE,EAAAA,SAAMxC,GACNwC,EAAAA,SAAMxC,GACN2F,EAAAA,SAAM3F,GACN2F,EAAAA,SAAM3F,GACN2F,EAAAA,SAAM3F,GACN6D,EAAK,EAALA,EACKiD,SAASnB,EAAAA,SAAM3F,EAAf8G,EACHA,SAASC,EAAAA,UAAgC,WAATP,EAAoB,MAAQ,QAA5DM,EACAA,SAASC,EAAAA,UAAgC,WAATP,EAAoB,SAAW,SAA/DM,EACA,CAVGF,CAAAA,CAcT,SAAAI,EAAAhH,GAAiD,IACzCwC,EAAOtC,EAASsC,KAChBmD,EAAOzF,EAASyD,gBAChBoD,EAAgBlD,EAAK,EAALA,GAAY5B,iBAAAA,CAAAA,EAAAA,MAE3B,CAAAgF,OACGC,EAAQ,SAARA,EAAAA,EAAAA,CAAAA,EADHC,MAEED,EAAQ,QAARA,EAAAA,EAAAA,CAAAA,CAFF,CAAA,CAAA,IAAAE,EAAAC,OAAAC,QAAA,SAAAtH,GAAA,IAAA,IAAAI,EAAAQ,EAAA,EAAAA,EAAA2G,UAAA/G,OAAAI,CAAA,GAAA,IAAA,IAAAK,KAAAb,EAAAmH,UAAA3G,GAAAyG,OAAAG,UAAAC,eAAA/F,KAAAtB,EAAAa,CAAA,IAAAjB,EAAAiB,GAAAb,EAAAa,IAAA,OAAAjB,CAAA,ECfT,SAAA0H,EAAA1H,GAA+C,OAAAoH,EAAA,GAAApH,EAAA,CAAAqG,MAGpCsB,EAAQvB,KAAOuB,EAAQR,MAAAA,OACtBQ,EAAQzB,IAAMyB,EAAQV,MAAAA,CAAAA,CAAAA,CCGlC,SAAAW,EAAA5H,GAAuDM,IACjDuH,EAAAA,GAAAA,IAKA,GACEhE,EAAK,EAALA,EAAU,CAAAzD,EACLwB,EAAQkG,sBAARlG,EADK,MAENkE,EAAYC,EAAAA,EAAmB,KAAnBA,EACZC,EAAaD,EAAAA,EAAmB,MAAnBA,EAAAA,EACdG,KAAAA,EAJO9F,EAKPgG,MAAAA,EALOhG,EAMP+F,QAAAA,EANO/F,EAOPiG,OAAAA,CAPP,MAAAjG,EAUSwB,EAAQkG,sBAARlG,CAGH,CAAR,MAAAxB,IAAQ,MAEF2H,EAAS,CAAA3B,KACPyB,EAAKzB,KADEF,IAER2B,EAAK3B,IAFGiB,MAGNU,EAAKxB,MAAQwB,EAAKzB,KAHZa,OAILY,EAAK1B,OAAS0B,EAAK3B,GAJd,EAQT8B,EAA6B,SAArBpG,EAAQQ,SAAsB6F,EAAerG,EAAQG,aAAvBkG,EAA9BrG,GACRuF,EACJa,EAAMb,OAASvF,EAAQsG,aAAeH,EAAOZ,MACzCF,EACJe,EAAMf,QAAUrF,EAAQuG,cAAgBJ,EAAOd,OAAAA,IAE7CmB,EAAiBxG,EAAQyG,YAARzG,EACjB0G,EAAgB1G,EAAQ2G,aAAR3G,EAAAA,GAIhBwG,GAAAA,EAAiC,CAAA,MAC7BzB,EAAS/D,EAAAA,CAAAA,EAAAA,GACG4F,EAAAA,EAAuB,GAAvBA,EAFiBrG,GAGlBqG,EAAAA,EAAuB,GAAvBA,EAHkB5H,EAK5BuG,OAAAA,EAL4BvG,EAM5BqG,QAAAA,CAAAA,CAAAA,OAGFwB,EAAAA,CAAAA,CAAAA,CAAAA,SAAAA,EAAAA,EAAAA,ECzDsEC,EAAAA,CAAAA,GAAuB,IAAAzH,EAajF2F,KAAKC,IAZlBvD,EAASqF,EAAQ,EAARA,EACTC,EAA6B,SAApBC,EAAOzG,SAChB0G,EAAehB,EAAAA,CAAAA,EACfiB,EAAajB,EAAAA,CAAAA,EACbkB,EAAelG,EAAAA,CAAAA,EAEf6D,EAAS/D,EAAAA,CAAAA,EACTqG,EAAiBvC,WAAWC,EAAOsC,cAAlBvC,EACjBwC,EAAkBxC,WAAWC,EAAOuC,eAAlBxC,EAGrBgC,GAAAA,IAZiGvG,EAavF+D,IAAMU,EAASmC,EAAW7C,IAAK,CAAzBU,EAbiFzE,EAcvFiE,KAAOQ,EAASmC,EAAW3C,KAAM,CAA1BQ,GAdgFtG,IAgBhGqH,EAAUc,EAAc,CAAAvC,IACrB4C,EAAa5C,IAAM6C,EAAW7C,IAA9B4C,EADqB1C,KAEpB0C,EAAa1C,KAAO2C,EAAW3C,KAA/B0C,EAFoB3B,MAGnB2B,EAAa3B,MAHMF,OAIlB6B,EAAa7B,MAJK,CAAdwB,EAAAA,GAAAA,EAMNU,UAAY,EAAAC,EACZC,WAAa,EAMjB,CAAA9I,GAAAc,EAAmB,CAAA,MACf8H,EAAYzC,WAAWC,EAAOwC,SAAlBzC,EACZ2C,EAAa3C,WAAWC,EAAO0C,UAAlB3C,EAAAA,EAEXR,KAAO+C,EAAAA,EAJMG,EAKbjD,QAAU8C,EAAAA,EALGG,EAMbhD,MAAQ8C,EAAAA,EANKE,EAOb/C,OAAS6C,EAAAA,EAPIE,EAUbD,UAAAA,EAVaC,EAWbC,WAAAA,CAAAA,CAAAA,OAMoCjH,GAF5CkB,GAAU,CAAA1C,EACNiI,EAAOzD,SAAPyD,CAAAA,EACAA,IAAAA,GAAqD,SAA1BG,EAAa5G,UAElCkH,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,SAAAA,EAAAA,ECnDiEC,EAAAA,CAAAA,GAAuB,IAAA3I,EAGtFgG,KAAKC,IAFblB,EAAO/D,EAAQG,cAAc4B,gBAC7B6F,EAAiBC,EAAAA,EAAAA,CAAAA,EACjBtC,EAAQP,EAASjB,EAAKuC,YAAajI,OAAOyJ,YAAc,CAAhD9C,EACRK,EAASL,EAASjB,EAAKwC,aAAclI,OAAO0J,aAAe,CAAlD/C,EAETd,EAAY1F,EAAmC,EAAlB2F,EAAAA,CAAAA,EAC7BC,EAAa5F,EAA2C,EAA1B2F,EAAAA,EAAgB,MAAhBA,EAErB,OAOR0C,EAPQ,CAAAvC,IACRJ,EAAY0D,EAAetD,IAAMsD,EAAeL,UADxC/C,KAEPJ,EAAawD,EAAepD,KAAOoD,EAAeH,WAF3ClC,MAAA9F,EAAA4F,OAAA3F,CAAA,CAORmH,CAAAA,CCTT,SAAAmB,EAAA5J,GAAyC,IACjCoC,EAAWR,EAAQQ,SAAAA,MACR,SAAbA,GAAoC,SAAbA,IAG2B,UAAlDQ,EAAAA,EAAkC,UAAlCA,GALmC,CAAA,EAQjCP,EAAaU,EAAAA,CAAAA,IAIZ8G,EAAAA,CAAAA,EAAAA,CCbT,SAAAC,EAAA9J,GAA8D,GAEvD,CAAAA,GAAY,CAAC4B,EAAQmI,eAAiBlG,EAAAA,EAAAA,OAClC3D,SAASyD,gBAAAA,IAEdqG,EAAKpI,EAAQmI,cAL2C,KAMrDC,GAAoD,SAA9CpH,EAAAA,EAA6B,WAA7BA,GAN+CxC,EAOrD4J,EAAGD,cAAAA,OAEHC,GAAM9J,SAASyD,eAAAA,CCExB,SAAAsG,EAAAjK,EAAAI,EAAAQ,EAAAK,EAKEyH,EAAAA,CAAAA,GACApI,IAGI4J,EAAa,CAAEhE,IAAK,EAAGE,KAAM,CAAhB,EAAA,IACXtC,EAAe4E,EAAgByB,EAAAA,CAAAA,EAAuC7E,EAAAA,EAA+B8E,EAAAA,CAAAA,CAA/B9E,EAAAA,GAGlD,aAAtB+E,EAAAA,EACWC,EAAAA,EAAAA,CAAAA,MAGV,CAAAhK,IAECiK,EACsB,iBAAtBF,EAE8B,UAL/BzJ,EAIgBkC,EAAgBC,EAAAA,CAAAA,CAAhBD,GACEV,WALlBxB,EAMkB4J,EAAOzI,cAAc4B,iBANvC/C,EAQ8B,WAAtByJ,EACQG,EAAOzI,cAAc4B,gBATrC1C,EAAA,MAcG0G,EAAU8B,EAAAA,EAAAA,EAAAA,CAAAA,EAAAA,GAOgB,SAA5Bc,EAAenI,UAAwByH,EAAAA,CAAAA,EAA3CxI,EAAAM,MAAkE,CAAA,KAC1D,CAAEsF,OAAAA,EAAQE,MAAAA,CAAV,EAAoBc,EAAeuC,EAAOzI,aAAtBkG,EAAAA,EACf/B,KAAOyB,EAAQzB,IAAMyB,EAAQwB,UAFwB9H,EAGrD8E,OAASc,EAASU,EAAQzB,IAH2B7E,EAIrD+E,MAAQuB,EAAQvB,KAAOuB,EAAQ0B,WAJsBhI,EAKrDgF,MAAQc,EAAQQ,EAAQvB,IALrC,CAAA,CAhCF,MA8CMqE,EAAqC,UAAnB,OAdtB7J,EAaQ8J,GAAW,GACG,OAAArJ,EACb+E,MAAQqE,EAAAA,EAA4BC,EAAQtE,MAAQ,EAAA/E,EACpD6E,KAAOuE,EAAAA,EAA4BC,EAAQxE,KAAO,EAAA7E,EAClDgF,OAASoE,EAAAA,EAA4BC,EAAQrE,OAAS,EAAAhF,EACtD8E,QAAUsE,EAAAA,EAA4BC,EAAQvE,QAAU,EAAA9E,CAAA,CAAA,SAAAsJ,EC3EpD,CAAExD,MAAAA,EAAOF,OAAAA,CAAT,GAAmB,OAC3BE,EAAAA,CAAAA,CAYT,SAAAyD,EAAA5K,EAAAI,EAAAQ,EAAAK,EAAAV,EAMEmK,EAAU,GACV,GACkC,CAAC,IAA/BG,EAAUlK,QAAQ,MAAlBkK,EAAAA,OAAAA,EAAAA,MAIEX,EAAaY,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,EAObC,EAAQ,CAAA7E,IACP,CAAAiB,MACI+C,EAAW/C,MADfF,OAEK+D,EAAQ9E,IAAMgE,EAAWhE,GAF9B,EADOG,MAKL,CAAAc,MACE+C,EAAW7D,MAAQ2E,EAAQ3E,MAD7BY,OAEGiD,EAAWjD,MAFd,EALKd,OASJ,CAAAgB,MACC+C,EAAW/C,MADZF,OAEEiD,EAAW/D,OAAS6E,EAAQ7E,MAF9B,EATIC,KAaN,CAAAe,MACG6D,EAAQ5E,KAAO8D,EAAW9D,KAD7Ba,OAEIiD,EAAWjD,MAFf,CAbM,EAmBRgE,EAAc5D,OAAO6D,KAAP7D,CAAAA,EACjB8D,IAAIC,GAAAA,EAAAA,CAAAA,IAAAA,CAAAA,EAEAL,EAAAA,GAAAA,CAAAA,KACGM,EAAQN,EAAAA,EAARM,CAAAA,CAAAA,CAJUhE,EAMjBiE,KAAK,CAAAtL,EAAAI,IAAUiE,EAAEkH,KAAOvI,EAAEuI,IANTlE,EAQdmE,EAAgBP,EAAYQ,OAChC,CAAA,CAAGtE,MAAAA,EAAOF,OAAAA,CAAV,IACEE,GAASqD,EAAOtC,aAAejB,GAAUuD,EAAOrC,YAF9B8C,EAKhBS,GAA2C,EAAvBF,EAAchL,OACpCgL,EACAP,GADc,GAAGG,IAGfO,EAAYd,EAAUe,MAAM,GAAhBf,EAAqB,GAArBA,OAEXa,GAAqBC,EAAAA,IAAalI,EAAiB,GAAnDiI,CCzDT,SAAAG,EAAA7L,EAAAI,EAAAQ,EAAsE8H,EAAgB,MACFpD,OAC3EmE,EAAAA,EADoBf,EAAgByB,EAAAA,CAAAA,EAAuC7E,EAAAA,EAA+B8E,EAAAA,CAAAA,CAA/B9E,EAC3EmE,CAAAA,CAAAA,CCVT,SAAAqC,EAAA9L,GAA+C,IAEvC2G,EADS/E,EAAQG,cAAcC,YACfC,iBAAPhC,CAAAA,EACT8L,EAAIrF,WAAWC,EAAOwC,WAAa,CAA/BzC,EAAoCA,WAAWC,EAAOqF,cAAgB,CAAlCtF,EACxCd,EAAIc,WAAWC,EAAO0C,YAAc,CAAhC3C,EAAqCA,WAAWC,EAAOsF,aAAe,CAAjCvF,EAChC,MAAA,CAAAS,MACNvF,EAAQyG,YAARzG,EADMqF,OAELrF,EAAQ2G,aAAR3G,CAFK,CAAA,CCLjB,SAAAsK,EAAAlM,GAAwD,MAChDmM,EAAO,CAAE/F,KAAM,QAASC,MAAO,OAAQF,OAAQ,MAAOD,IAAK,QAApD,EAAA,OACN2E,EAAUuB,QAAQ,yBAA0BC,GAAWF,EAAAA,EAAvDtB,CAAAA,CCIT,SAAAyB,EAAAtM,EAAAI,EAAAQ,GAA8EA,EAChEiK,EAAUe,MAAM,GAAhBf,EAAqB,GAD2C,IAItE0B,EAAaC,EAAAA,CAAAA,EAGbC,EAAgB,CAAAtF,MACboF,EAAWpF,MADEF,OAEZsF,EAAWtF,MAFC,EAMhByF,EAAmD,CAAC,IAA1C,CAAA,QAAA,QAAkB/L,QAAlBC,CAAA,EACV+L,EAAWD,EAAU,MAAQ,OAC7BE,EAAgBF,EAAU,OAAS,MACnCG,EAAcH,EAAU,SAAW,QACnCI,EAAuBzL,EAAsB,QAAX,SAAA,OAAAd,EAAAe,GAGtCyL,EAAAA,GACAA,EAAAA,GAAgC,EAChCR,EAAAA,GAA0B,EAAAhM,EAAAoB,GACxBkJ,IAAAA,EAEAkC,EAAAA,GAAkCR,EAAAA,GAGlCQ,EAAiBC,EAAAA,CAAAA,GAAjBD,CAAAA,CChCN,SAAAE,EAAAjN,EAAAI,GAAyC,OAEnC8M,MAAM1F,UAAU2F,KACXC,EAAID,KAAJC,CAAAA,EAIFA,EAAI3B,OAAJ2B,CAAAA,EAAkB,EAAlBA,CCLT,SAAAC,EAAArN,EAAAI,EAAAQ,GAAoD,IAO5C0M,EAP4C,OAE9CJ,MAAM1F,UAAU+F,UACXH,EAAIG,UAAUC,GAAOA,EAAAA,KAAAA,CAArBJ,GAIHE,EAAQH,EAAAA,EAAUM,GAAOA,EAAAA,KAAAA,CAAjBN,EACPC,EAAIzM,QAAJyM,CAAAA,EAAAA,CCLT,SAAAM,EAAA1N,EAAAI,EAAAQ,GAGM+M,OAFmBC,KAAAA,IAAAA,EAAAA,EAEnBD,EAAUE,MAAM,EAAGN,EAAAA,EAAqB,OAArBA,CAAAA,CAAnBI,GAEWG,QAAQ7H,IACjBA,EAAAA,UAD6B8H,QAEvBC,KAAK,uDAAA,EAFkB,IAI3BC,EAAKhI,EAAAA,UAAwBA,EAASgI,GACxChI,EAASiI,SAAWC,EAAAA,CAAAA,IALS/N,EAS1BuH,QAAQ6C,OAAS/B,EAAc2F,EAAKzG,QAAQ6C,MAA3B/B,EATSrI,EAU1BuH,QAAQ1E,UAAYwF,EAAc2F,EAAKzG,QAAQ1E,SAA3BwF,EAVMrI,EAYxB6N,EAAAA,EAAAA,CAAAA,EAZX,CAAA,EAAA7N,CAAA,CCPF,SAAAiO,IAAiC,GAE3BC,CAAAA,KAAKC,MAAMC,YAFgB,CAEhBA,IAIXJ,EAAO,CAAAK,SACCH,KADD3H,OAAA,GAAA+H,YAAA,GAAAC,WAAA,GAAAC,QAAA,CAAA,EAAAjH,QAAA,EAAA,EAAA3H,EAUN2H,QAAQ1E,UAAY4L,EACvBP,KAAKC,MACLD,KAAK9D,OACL8D,KAAKrL,UACLqL,KAAKQ,QAAQC,aAJUF,EAhBM7O,EA0B1B6K,UAAYmE,EACfV,KAAKQ,QAAQjE,UACbuD,EAAKzG,QAAQ1E,UACbqL,KAAK9D,OACL8D,KAAKrL,UACLqL,KAAKQ,QAAQnB,UAAUsB,KAAK5E,kBAC5BiE,KAAKQ,QAAQnB,UAAUsB,KAAKvE,OANbsE,EA1BchP,EAoC1BkP,kBAAoBd,EAAKvD,UApCC7K,EAsC1B+O,cAAgBT,KAAKQ,QAAQC,cAtCH/O,EAyC1B2H,QAAQ6C,OAAS2E,EACpBb,KAAK9D,OACL4D,EAAKzG,QAAQ1E,UACbmL,EAAKvD,SAHesE,EAzCSnP,EA+C1B2H,QAAQ6C,OAAO4E,SAAWd,KAAKQ,QAAQC,cACxC,QACA,WAjD2B/O,EAoDxBqP,EAAaf,KAAKX,UAAlB0B,CAAAA,EAIFf,KAAKC,MAAMe,UAxDehB,KA4DxBQ,QAAQS,SAAAA,CAAAA,GA5DgBjB,KAyDxBC,MAAMe,UAAAA,CAAAA,EAzDkBhB,KA0DxBQ,QAAQU,SAAAA,CAAAA,EAxDAhB,CAFgB,CCNjC,SAAAiB,EAAAzP,EAAAI,GAAmE,OAC1DuN,EAAU+B,KACf,CAAA,CAAGC,KAAAA,EAAMzB,QAAAA,CAAT,IAAuBA,GAAWyB,IAAAA,CAD7BhC,CAAAA,CCAT,SAAAiC,EAAA5P,GAA2D,IACnD6P,EAAAA,CAAAA,CAAAA,EAAAA,KAAAA,SAAAA,MAAAA,KACAC,EAAY5N,EAAS6N,OAAO,CAAhB7N,EAAmB8N,YAAnB9N,EAAmCA,EAAS2L,MAAM,CAAf3L,EAAAA,IAEhD5B,IAAIC,EAAI,EAAGA,EAAIsP,EAASrP,OAAQD,CAAAA,GAAK,CAAA,IAClC0P,EAASJ,EAAAA,GACTK,EAAUD,EAAAA,GAAU1P,EAAAK,EAAVqP,EAAAA,GAC4B,KAAA,IAAjC/P,SAASsC,KAAK2N,MAAdjQ,GAAAA,OAAAA,CAAAA,CAAAA,OAIN,IAAA,CCVT,SAAAkQ,IAAkC,OAAA9B,KAC3BC,MAAMC,YAAAA,CAAAA,EAGP6B,EAAkB/B,KAAKX,UAAW,YAAlC0C,IAAAA,KACG7F,OAAO8F,gBAAgB,aAAA,EAAAhC,KACvB9D,OAAO2F,MAAMf,SAAW,GAAAd,KACxB9D,OAAO2F,MAAMjK,IAAM,GAAAoI,KACnB9D,OAAO2F,MAAM/J,KAAO,GAAAkI,KACpB9D,OAAO2F,MAAM9J,MAAQ,GAAAiI,KACrB9D,OAAO2F,MAAMhK,OAAS,GAAAmI,KACtB9D,OAAO2F,MAAMI,WAAa,GAAAjC,KAC1B9D,OAAO2F,MAAMK,EAAyB,WAAzBA,GAAyC,IAAAlC,KAGxDmC,sBAAAA,EAIDnC,KAAKQ,QAAQ4B,iBAAAA,KACVlG,OAAOnI,WAAWsO,YAAYrC,KAAK9D,MAAAA,EAEnC8D,IAAA,CCzBT,SAAAsC,EAAA5Q,GACQ+B,EAAgBH,EAAQG,cAAAA,OACvBA,EAAgBA,EAAcC,YAAc/B,MAAAA,CAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GCJwB,IACrE4Q,EAAmC,SAA1B7H,EAAa5G,SACtB0O,EAASD,EAAS7H,EAAajH,cAAcC,YAApC6O,EAAAA,EACRE,iBAAAA,EAAAA,EAAkC,CAAEC,QAAAA,CAAAA,CAAF,CAAA,EAHkCzQ,GAAA0Q,EAOvEnO,EAAgBgO,EAAOzO,UAAvBS,EAAAA,EAAAA,EAAAA,CAAAA,EAPuE7B,EAa7DiQ,KAAAA,CAAAA,CAAAA,CAShB,SAAAC,EAAAnR,EAAAI,EAAAQ,EAAAK,GAKEL,EAEMwQ,YAAAA,EAFNR,EAAA5Q,CAAA,EAGqB+Q,iBAAiB,SAAUxC,EAAM6C,YAAa,CAAEJ,QAAAA,CAAAA,CAAF,CAAA,EAG7DK,EAAgBvO,EAAAA,CAAAA,EAAAA,OAAAA,EAAAA,EAGpB,SACAyL,EAAM6C,YACN7C,EAAM+C,aAAAA,EAAAA,EAEFD,cAAAA,EAAAA,EACAE,cAAAA,CAAAA,EAAAA,CAAAA,CCpCR,SAAAC,IACOlD,KAAKC,MAAMgD,gBAD6BjD,KAEtCC,MAAQkD,EACXnD,KAAKrL,UACLqL,KAAKQ,QACLR,KAAKC,MACLD,KAAKoD,cAJMD,EAF8B,CCA/C,SAAAE,EAAA3R,EAAAI,GAA+D,OAAAwQ,EAAA5Q,CAAA,EAExC4R,oBAAoB,SAAUrD,EAAM6C,WAAAA,EAAAA,EAGnDE,cAAcxD,QAAQgD,IAAU9Q,EAC7B4R,oBAAoB,SAAUrD,EAAM6C,WAAAA,CAD7C,CAAA,EAAAhR,EAKMgR,YAAc,KAAAhR,EACdkR,cAAAA,GAAAA,EACAD,cAAgB,KAAAjR,EAChBmR,cAAAA,CAAAA,EAAAA,CAAAA,CCZR,SAAAM,IACMvD,KAAKC,MAAMgD,gBAD+BO,qBAEvBxD,KAAKoD,cAAAA,EAFkBpD,KAGvCC,MAAQwD,EAAqBzD,KAAKrL,UAAWqL,KAAKC,KAA1CwD,EAH+B,CCFhD,SAAAC,EAAAhS,GAAqC,MACtB,KAANiB,GAAY,CAACgR,MAAMvL,WAAAA,CAAAA,CAANuL,GAAwBC,SAAAA,CAAAA,CAAAA,CCE9C,SAAAC,EAAAnS,EAAAI,GAAmDiH,OAC1C6D,KAAAA,CAAAA,EAAa4C,QAAQsE,IAAQ9R,IAC9B+R,EAAO,GAIP,CAAC,IADH,CAAA,QAAA,SAAA,MAAA,QAAA,SAAA,QAAsD1R,QAAtDC,CAAA,GAEA0R,EAAU3L,EAAAA,EAAV2L,IANgCrR,EAQzB,MARyBjB,EAU1BmQ,MAAAA,GAAcxJ,EAAAA,GAAAA,CAVxB,CAAA,CAAA,CCHF,SAAA4L,EAAAvS,EAAAI,GAA2DiH,OAClD6D,KAAAA,CAAAA,EAAiB4C,QAAQ,SAAAlN,GAE1B4R,CAAAA,IADU7D,EAAAA,GAD+B3O,EAKnCsQ,gBAAAA,CAAAA,EALmCtQ,EAGnCyS,aAAAA,EAAmB9D,EAAAA,EAAAA,CAH/B,CAAA,CAAA,CCKF,SAAA+D,EAAA1S,GAAyC,OAAAmS,EAK7B/D,EAAKK,SAASjE,OAAQ4D,EAAKzH,MAAAA,EAAAA,EAIvByH,EAAKK,SAASjE,OAAQ4D,EAAKO,UAAAA,EAGrCP,EAAKuE,cAAgBtL,OAAO6D,KAAKkD,EAAKM,WAAjBrH,EAA8B7G,QAAAA,EAC3C4N,EAAKuE,aAAcvE,EAAKM,WAAAA,EAAAA,CAAAA,CAgBtC,SAAAkE,GAAA5S,EAAAI,EAAAQ,EAAAK,EAAAV,GAQQwM,EAAmB8B,EAAAA,EAAAA,EAAAA,EAA8CC,EAAQC,aAAtDF,EAKnBhE,EAAYmE,EAChBF,EAAQjE,UADQmE,EAAAA,EAAAA,EAKhBF,EAAQnB,UAAUsB,KAAK5E,kBACvByE,EAAQnB,UAAUsB,KAAKvE,OANPsE,EAAAA,OAAAA,EASXyD,aAAa,cAAAnR,CAAA,EAAA6Q,EAAA/R,EAIF,CAAEgP,SAAUN,EAAQC,cAAgB,QAAU,UAA9C,CAAA,EAAAnO,CAAA,CClDpB,SAAAiS,GAAA7S,EAAAI,GAA6D,GACrD,CAAEoK,OAAAA,EAAQvH,UAAAA,CAAV,EAAwBmL,EAAKzG,QAC7B,CAAEmL,MAAAA,EAAOC,MAAAA,CAAT,EAAmBnM,KACnBoM,EAAUhM,GAAAA,EAEViM,EAAiBH,EAAM7P,EAAUkE,KAAhB2L,EACjBI,EAAcJ,EAAMtI,EAAOrD,KAAb2L,EAEdK,EAA2D,CAAC,IAA/C,CAAA,OAAA,SAAkBxS,QAAQyN,EAAKvD,SAA/B,EACbuI,EAA8C,CAAC,IAAjChF,EAAKvD,UAAUlK,QAAQ,GAAvByN,EAIdiF,EAAsBjT,EAExB+S,GAAAA,GALoBF,EAAiB,GAAMC,EAAc,EAKzDC,EAAAA,EAFwB7R,EAKtBgS,EAAoBlT,EAAAG,EAAAe,EAAA,MAEnB,CAAA8E,KACCiN,EAVoC,GAAvBJ,EAAiB,GAA+B,GAApBC,EAAc,GAW3C,CAAAlQ,GAAhBuQ,EACI/I,EAAOpE,KAAO,EACdoE,EAAOpE,IAHPiN,EADDnN,IAMAoN,EAAkB9I,EAAOtE,GAAzBoN,EANAnN,OAOGmN,EAAkB9I,EAAOrE,MAAzBmN,EAPHjN,MAQEgN,EAAoB7I,EAAOnE,KAA3BgN,CARF,CAAA,CAAA,MChCHG,GAAY/S,GAAa,WAAWoC,KAAK1C,UAAUO,SAA1B,EAS/B,SAAA+S,GAAAzT,EAAAI,GAAoD,GAC5C,CAAE2L,EAAAA,EAAGnG,EAAAA,CAAL,EAAAxF,EACEoK,EAAW4D,EAAKzG,QAAhB6C,UAGFkJ,EAA8BvG,EAClCiB,EAAKK,SAASd,UACd1H,GAA8B,eAAlBA,EAAS0J,IAFaxC,EAGlCwG,gBAMIA,GALFD,KAAAA,IAAAA,GAT8C3F,QAUxCC,KACN,+HAAA,EAIF0F,KAAAA,IAAAA,EAEI5E,EAAQ6E,gBAFZD,GAII5P,EAAeE,EAAgBoK,EAAKK,SAASjE,MAA9BxG,EACf4P,EAAmB9L,EAAAA,CAAAA,EAGnBnB,EAAS,CAAAyI,SACH5E,EAAO4E,QADJ,EAITzH,EAAUkM,GAAAA,EAEd5T,OAAO6T,iBAAmB,GAAK,CAAAC,EAFjBF,EAKVtN,EAAc,WAANwF,EAAiB,MAAQ,SACjCtF,EAAc,UAANb,EAAgB,OAAS,QAKjCoO,EAAmBxD,EAAyB,WAAzBA,EAWftK,EACI,UAAVK,EAG4B,SAA1BzC,EAAa1B,SACT,CAAC0B,EAAaqE,aAAeR,EAAQxB,OAErC,CAACyN,EAAiB3M,OAASU,EAAQxB,OAGrCwB,EAAQzB,IAAAA,EAEF,SAAVO,EAC4B,SAA1B3C,EAAa1B,SACR,CAAC0B,EAAaoE,YAAcP,EAAQtB,MAEpC,CAACuN,EAAiBzM,MAAQQ,EAAQtB,MAGpCsB,EAAQvB,KAnBPF,GAqBNyN,GAAAA,EAAAA,EAAAA,kBAC0BvK,QAAAlF,UAAA3B,EAAAkB,GACZ,EAAAlB,EAAA0R,GACA,EAAA1R,EACTgO,WAAa,gBACf,CAAA,MAEC2D,EAAsB,UAAV3N,EAAqB,CAAC,EAAI,EACtC4N,EAAuB,SAAV1N,EAAoB,CAAC,EAAI,EAAAlE,EAAAkB,GAC5ByC,EAAAA,EAJX3D,EAAA0R,GAKW7N,EAAAA,EALX7D,EAMEgO,WAAc9M,EAAd8M,KAAc0D,CAAA,CAIjBtF,EAAa,CAAAyF,cACFhG,EAAKvD,SADH,EAAA,OAAA7K,EAKd2O,WAAAA,EAAAA,GAAAA,EAAiCP,EAAKO,UAAAA,EAAAA,EACtChI,OAAAA,EAAAA,GAAAA,EAAyByH,EAAKzH,MAAAA,EAAAA,EAC9B+H,YAAAA,EAAAA,GAAmBN,EAAKzG,QAAQ0M,MAAUjG,EAAKM,WAAAA,EAAAA,CAAAA,CChGtD,SAAA4F,GAAAtU,EAAAI,EAAAQ,GAIE,MACM2T,EAAapH,EAAAA,EAAgB,CAAA,CAAGwC,KAAAA,CAAH,IAAcA,IAAAA,CAA9BxC,EAEbqH,EACJ,CAAC,CAAAvT,GACD0M,EAAU+B,KAAKzJ,GAEXA,EAAS0J,OAAT1J,GACAA,EAASiI,SACTjI,EAASrB,MAAQ2P,EAAW3P,KAJhC+I,EAAAA,GAQE,CAAApN,EAAa,CAAA,MACTgU,OAAcnU,MACdqU,OAAa7T,MAAAmN,QACXC,KACL/M,8BAAAjB,6DAAAA,IAAA,CAAA,CAAA,OAAAO,CAAA,CCrBP,SAAAmU,GAAA1U,EAAAI,GAA6C,GAEtCuU,GAAmBvG,EAAKK,SAASd,UAAW,QAAS,cAArDgH,EAFsC,CAEtCA,IAIDhC,EAAe7D,EAAQlN,QAAAA,GAGC,UAAxB,OAAAhB,GAAA,GAIE,EAJFA,EACawN,EAAKK,SAASjE,OAAOoK,cAArBxG,CAAAA,GAGX,OAAApO,CAAA,MAAA,GAMA,CAACoO,EAAKK,SAASjE,OAAOpF,SAArBgJ,CAAAA,EAAAA,OAAAA,QACKJ,KACN,+DAAA,EAAAhO,EAAA,IAMA6K,EAAYuD,EAAKvD,UAAUe,MAAM,GAArBwC,EAA0B,GACtC,CAAE5D,OAAAA,EAAQvH,UAAAA,CAAV,EAAwBmL,EAAKzG,QAC7BwL,EAAsD,CAAC,IAA1C,CAAA,OAAA,SAAkBxS,QAAlBM,CAAA,EAEb4T,EAAM1B,EAAa,SAAW,QAC9B2B,EAAkB3B,EAAa,MAAQ,OACvC3N,EAAOsP,EAAgBC,YAAhBD,EACPE,EAAU7B,EAAa,OAAS,MAChC8B,EAAS9B,EAAa,SAAW,QACjC+B,EAAmB1I,EAAAA,CAAAA,EAAAA,GAoBnB2I,GAZFlS,EAAAA,GAAAA,EAAuCuH,EAAAA,KA5CAxK,EA6CpC2H,QAAQ6C,OAAAA,IACXA,EAAAA,IAAgBvH,EAAAA,GAAAA,IAGhBA,EAAAA,GAAAA,EAAqCuH,EAAAA,KAjDExK,EAkDpC2H,QAAQ6C,OAAAA,IACXvH,EAAAA,GAAAA,EAAqCuH,EAAAA,IAnDExK,EAqDtC2H,QAAQ6C,OAAS/B,EAAc2F,EAAKzG,QAAQ6C,MAA3B/B,EAGPxF,EAAAA,GAAkBA,EAAAA,GAAiB,EAAIiS,EAAmB,GAInEpT,EAAMc,EAAyBwL,EAAKK,SAASjE,MAAvC5H,EACNwS,EAAmB1O,WAAW5E,EAAAA,SAAKS,EAAhBmE,EACnB2O,EAAmB3O,WAAW5E,WAAKS,SAAhBmE,EACrB4O,EACFH,EAAS/G,EAAKzG,QAAQ6C,OAAb4D,GAAT+G,EAAAA,EAAAA,EAGUvO,KAAKC,IAAID,KAAK2O,IAAI/K,EAAAA,GAAAA,EAAT5D,CAAAA,EAAqD,CAA9DA,EAAAA,EAEP+L,aAAAA,EAAAA,EACAhL,QAAQ0M,MAAQ,EAAArR,GACX4D,KAAKkM,MAALlM,CAAAA,GADWnD,GAER,EAFQ,CApEhBkR,CA8DHQ,OAMmBnV,CAAA,CC3EvB,SAAAwV,GAAAxV,GAAwD,MACpC,QAAd2L,EACK,QACgB,UAAdA,EACF,MAJ6C3L,CAAA,CCwBxD,IAAAyV,GAAA,CAAA,aAAA,OAAA,WAAA,YAAA,MAAA,UAAA,cAAA,QAAA,YAAA,aAAA,SAAA,eAAA,WAAA,OAAA,cC5BA,MAAMC,GAAkBC,GAAW9H,MAAM,CAAjB8H,EAYxB,SAAAC,GAAA5V,EAA6C6V,EAAAA,CAAAA,GACrCC,EAAQJ,GAAgB/U,QAAhB+U,CAAAA,EACRtI,EAAMsI,GACT7H,MAAMiI,EAAQ,CADLJ,EAETK,OAAOL,GAAgB7H,MAAM,EAAtB6H,CAAAA,CAFEA,EAAAA,OAGLG,EAAUzI,EAAI4I,QAAJ5I,EAAVyI,CAAAA,CAAAA,MCZHI,GAAY,CAAAC,KACV,OADUC,UAEL,YAFKC,iBAGE,kBAHF,EAalB,SAAAC,GAAArW,EAAAI,GAA4C,GAEtCiQ,EAAAA,EAAkBjC,EAAKK,SAASd,UAAW,OAA3C0C,GAIAjC,EAAKQ,SAAWR,EAAKvD,YAAcuD,EAAKc,mBAJxCmB,CAIwCnB,MAKtChF,EAAaY,EACjBsD,EAAKK,SAASjE,OACd4D,EAAKK,SAASxL,UACd6L,EAAQpE,QACRoE,EAAQzE,kBACR+D,EAAKW,aALYjE,EAAAA,IAQfD,EAAYuD,EAAKvD,UAAUe,MAAM,GAArBwC,EAA0B,GACtCkI,EAAoBtJ,EAAAA,CAAAA,EACpBrB,EAAYyC,EAAKvD,UAAUe,MAAM,GAArBwC,EAA0B,IAAM,GAE5CmI,EAAAA,GAAAA,OAEIzH,EAAQ0H,UAAAA,KACTP,GAAUC,KAAAA,EACD,CAAAjV,EAAAV,GAAA,MAAA,KAET0V,GAAUE,UAAAA,EACDM,GAAAA,CAAAA,EAAAA,MAAAA,KAETR,GAAUG,iBAAAA,EACDK,GAAAA,EAAAA,CAAAA,CAAAA,EAAAA,MAAAA,QAAAA,EAGA3H,EAAQ0H,QAAAA,CAAAA,EAGd1I,QAAQ,CAAAnM,EAAAQ,KAAiB,GAC7B0I,IAAAA,GAAsB0L,EAAU/V,SAAWsV,EAAQ,EAAA,OAAA9V,EAAAiB,EAI3CmN,EAAKvD,UAAUe,MAAM,GAArBwC,EAA0B,GALL7N,EAMbyM,EAAAA,CAAAA,EANa,IAQ3BP,EAAgB2B,EAAKzG,QAAQ6C,OAC7BkM,EAAatI,EAAKzG,QAAQ1E,UAG1B8P,EAAQnM,KAAKmM,MACb4D,EACW,SAAd9L,GACCkI,EAAMtG,EAAcpG,KAApB0M,EAA6BA,EAAM2D,EAAWtQ,IAAjB2M,GAChB,UAAdlI,GACCkI,EAAMtG,EAAcrG,IAApB2M,EAA4BA,EAAM2D,EAAWrQ,KAAjB0M,GACf,QAAdlI,GACCkI,EAAMtG,EAActG,MAApB4M,EAA8BA,EAAM2D,EAAWxQ,GAAjB6M,GACjB,WAAdlI,GACCkI,EAAMtG,EAAcvG,GAApB6M,EAA2BA,EAAM2D,EAAWvQ,MAAjB4M,EAEzB6D,EAAgB7D,EAAMtG,EAAcrG,IAApB2M,EAA4BA,EAAM7I,EAAW9D,IAAjB2M,EAC5C8D,EAAiB9D,EAAMtG,EAAcpG,KAApB0M,EAA6BA,EAAM7I,EAAW7D,KAAjB0M,EAC9C+D,EAAe/D,EAAMtG,EAAcvG,GAApB6M,EAA2BA,EAAM7I,EAAWhE,GAAjB6M,EAC1CgE,EACJhE,EAAMtG,EAActG,MAApB4M,EAA8BA,EAAM7I,EAAW/D,MAAjB4M,EAE1BiE,EACW,SAAdnM,GAAAA,GACc,UAAdA,GAAAA,GACc,QAAdA,GAAAA,GACc,WAAdA,GAAAA,EAGGsI,EAAsD,CAAC,IAA1C,CAAA,MAAA,UAAkBxS,QAAlBM,CAAA,EAGbgW,EACJ,CAAC,CAACnI,EAAQoI,iBACR/D,GAA4B,UAAdxH,GAAdwH,GACCA,GAA4B,QAAdxH,GAAdwH,GACA,CAAA5N,GAA6B,UAAdoG,GAAfvC,GACA,CAAA7D,GAA6B,QAAdoG,GAAfzH,GAGCiT,EACJ,CAAC,CAACrI,EAAQsI,0BACRjE,GAA4B,UAAdxH,GAAdwH,GACCA,GAA4B,QAAdxH,GAAdwH,GACA,CAAA5N,GAA6B,UAAdoG,GAAfzH,GACA,CAAAqB,GAA6B,QAAdoG,GAAfvC,GAECiO,EAAmBJ,GAAAA,GAErBN,GAAAA,GAAAA,KAxD6B3W,EA0D1B4O,QAAAA,CAAAA,GAED+H,GAAAA,KA5D2B1V,EA6DjBsV,EAAUT,EAAQ,IA7DD/J,IAAA1K,EAiEjBiW,GAAAA,CAAAA,GAjEiBtX,EAoE1B6K,UAAYA,GAAac,EAAY,IAAAtK,EAAkB,IApE7BrB,EAwE1B2H,QAAQ6C,OAAAA,EAAAA,GACR4D,EAAKzG,QAAQ6C,OACb2E,EACDf,EAAKK,SAASjE,OACd4D,EAAKzG,QAAQ1E,UACbmL,EAAKvD,SAHJsE,CAAAA,EA1E0BnP,EAiFxBqP,EAAajB,EAAKK,SAASd,UAA3B0B,EAA4C,MAA5CA,EAjFX,CAAA,CAjC4CH,CA8BpBsH,OAGxBxW,CAAA,CCrDF,SAAAuX,GAAAvX,GAA2C,GACnC,CAAEwK,OAAAA,EAAQvH,UAAAA,CAAV,EAAwBmL,EAAKzG,QAC7BkD,EAAYuD,EAAKvD,UAAUe,MAAM,GAArBwC,EAA0B,GACtC2E,EAAQnM,KAAKmM,MACbI,EAAsD,CAAC,IAA1C,CAAA,MAAA,UAAkBxS,QAAlBM,CAAA,EACbuE,EAAO2N,EAAa,QAAU,SAC9B8B,EAAS9B,EAAa,OAAS,MAC/BtG,EAAcsG,EAAa,QAAU,SAAA,OAEvC3I,EAAAA,GAAeuI,EAAM9P,EAAAA,EAAN8P,IAAAA,EACZpL,QAAQ6C,OAAAA,GACXuI,EAAM9P,EAAAA,EAAN8P,EAA2BvI,EAAAA,IAE3BA,EAAAA,GAAiBuI,EAAM9P,EAAAA,EAAN8P,IAAAA,EACdpL,QAAQ6C,OAAAA,GAAiBuI,EAAM9P,EAAAA,EAAN8P,GAAAA,CAAAA,CCLlC,SAAAyE,GAAAxX,EAAAI,EAAAQ,EAAAK,GAA2E,IAAAV,EA6B9DqG,KAAKC,IA3BV+E,EAAQ6L,EAAInK,MAAM,2BAAVmK,EACRjF,EAAQ,CAAC5G,EAAM,GACfyG,EAAOzG,EAAM,GAANA,GAGT,CAAAtK,EAAA,OAAAtB,EAAA,GAIsB,IAAtBqS,EAAK1R,QAAQ,GAAb0R,EAcG,MAAa,OAATA,GAA0B,OAATA,GAGb,OAATA,EACKzL,EACL1G,SAASyD,gBAAgBwE,aACzBlI,OAAO0J,aAAe,CAFjB/C,EAKAA,EACL1G,SAASyD,gBAAgBuE,YACzBjI,OAAOyJ,YAAc,CAFhB9C,GAKK,IAAP8Q,EAdFpW,EAdsB,CAAAhB,IACvBsB,EAMG,MAKDiG,EAAOY,EATNzI,EAAA,OAFH4B,EAEGhB,EAIAK,CAKMwH,EAAAA,OACNZ,EAAAA,GAAoB,IAApBA,CAbT,CAcO,CAiCT,SAAA8P,GAAA3X,EAAAI,EAAAQ,EAAAK,GAKE,MACM0G,EAAAA,CAAAA,EAAAA,GAKAiQ,EAAyD,CAAC,IAA9C,CAAA,QAAA,QAAkBjX,QAAlBM,CAAA,EAIZ4W,EAAYC,EAAOlM,MAAM,SAAbkM,EAAwB3M,IAAI4M,GAAQA,EAAKC,KAALD,CAApCD,EAIZG,EAAUJ,EAAUlX,QACxBwM,EAAAA,EAAgB4K,GAAgC,CAAC,IAAzBA,EAAKG,OAAO,MAAZH,CAAxB5K,CADc0K,EAIZA,EAAAA,IAA0D,CAAC,IAArCA,EAAAA,GAAmBlX,QAAQ,GAA3BkX,GAlB1B9J,QAmBUC,KACN,8EAAA,EAMEmK,EAAa,cAAA7X,IACf8X,EAAkB,CAAC,IAAbH,EASN,CAAA3W,GARA,CACEuW,EACGhK,MAAM,EADTgK,CAAAA,EAEG9B,OAAO,CAAC8B,EAAAA,GAAmBjM,MAAnBiM,CAAAA,EAAqC,GAFhDA,EAGA,CAACA,EAAAA,GAAmBjM,MAAnBiM,CAAAA,EAAqC,IAAI9B,OACxC8B,EAAUhK,MAAMoK,EAAU,CAA1BJ,CADF,GAJF,OAAAtV,EAWE6V,EAAIjN,IAAI,CAAAnL,EAAAiB,KAAe,MAErB4L,GAAyB,IAAViJ,EAAc,CAAAzU,EAAdyU,GACjB,SACA,QAAAxV,IACA+X,EAAAA,CAAAA,EAAAA,OAEFC,EAGGC,OAAO,CAAAvY,EAAAI,IACkB,KAApB4C,EAAEA,EAAExC,OAAS,IAAuC,CAAC,IAA3B,CAAA,IAAA,KAAWG,QAAXP,CAAA,GADxBJ,EAEFgD,EAAExC,OAAS,GAAAJ,EAFTkB,EAAA,CAAA,EAAAtB,GAAAsB,GAAAtB,EAMFgD,EAAExC,OAAS,IAAAJ,EANTkB,EAAA,CAAA,EAAAtB,GAUGgD,EAAE+S,OAAF/S,CAAAA,EAbbsV,EAAAA,EAiBGnN,IAAIsM,GAAOe,GAAAA,EAAAA,EAAAA,EAAAA,CAAAA,CAjBdF,CAPE,CAAAF,GA6BFtK,QAAQ,CAAA9N,EAAAI,KAAeJ,EACtB8N,QAAQ,CAAAlN,EAAAK,KACLqR,EAAAA,CAAAA,IADuB/R,EAAAH,IAEP2X,GAA2B,MAAnBO,EAAGG,EAAS,GAAa,CAAC,EAAI,GAF5D,CAAA,CADF,CAAA,EAAAlY,CAAA,CAmBF,SAAAmY,GAAA1Y,EAAqC,CAAE8X,OAAAA,CAAF,GAAY,GACzC,CAAEjN,UAAAA,EAAWlD,QAAS,CAAE6C,OAAAA,EAAQvH,UAAAA,CAAV,CAAtB,EAAAjD,EACA2Y,EAAgB9N,EAAUe,MAAM,GAAhBf,EAAqB,GAEvClD,EACA2K,EAAU,CAAAlS,CAAVkS,EACQ,CAAC,CAAAlS,EAAS,GAEVwY,GAAAA,EAAAA,EAAAA,EAAAA,CAAAA,EAJRjR,MAOkB,SAAlBgR,GAAAA,EACKzS,KAAOyB,EAAQ,GAARA,EACPvB,MAAQuB,EAAQ,IACI,UAAlBgR,GAAAA,EACFzS,KAAOyB,EAAQ,GAARA,EACPvB,MAAQuB,EAAQ,IACI,QAAlBgR,GAAAA,EACFvS,MAAQuB,EAAQ,GAARA,EACRzB,KAAOyB,EAAQ,IACK,WAAlBgR,IAAAA,EACFvS,MAAQuB,EAAQ,GAARA,EACRzB,KAAOyB,EAAQ,IAARA,EAGX6C,OAAAA,EAAAA,CAAAA,CCpLP,SAAAqO,GAAA7Y,EAAAI,GAAuDE,IACjD+J,EACFyE,EAAQzE,mBAAqBrG,EAAgBoK,EAAKK,SAASjE,MAA9BxG,EAK3BoK,EAAKK,SAASxL,YAAdmL,IAPiDxN,EAQ/BoD,EAAAA,CAAAA,GAR+B,IAc/C8U,EAAgBtI,EAAyB,WAAzBA,EAChBuI,EAAe3K,EAAKK,SAASjE,OAAO2F,MACpC,CAAEjK,IAAAA,EAAKE,KAAAA,GAAMnF,GAAAU,CAAb,EAAApB,EAAAA,EACO2F,IAAM,GAjBkC3F,EAkBxC6F,KAAO,GAlBiC7F,EAAAU,GAmBvB,GAnBuB,MAqB/CiJ,EAAaY,EACjBsD,EAAKK,SAASjE,OACd4D,EAAKK,SAASxL,UACd6L,EAAQpE,QAHSI,EAKjBsD,EAAKW,aALYjE,EAAAA,EAUN5E,IAAAA,EA/BwC3F,EAgCxC6F,KAAAA,EAhCwC7F,EAAAU,GAAAU,EAAAvB,EAmC7C8J,WAAAA,EAEFtF,EAAQkK,EAAQkK,SAAAA,IAClBxO,EAAS4D,EAAKzG,QAAQ6C,OAAAA,MAEpByO,EAAQ,CAAAC,QAAAlZ,GACOM,IACbkS,EAAQhI,EAAAA,GAAAA,MAOL,EAAExK,GAJEmZ,EADT3O,EAAAA,GAAoBN,EAAAA,IACpB,CAAC4E,EAAQqK,oBAEDvS,KAAKC,IAAI2D,EAAAA,GAAmBN,EAAAA,EAA5BtD,EAEDhG,CAAF,CATG,EAAAwY,UAAApZ,GAWS,IACb2M,EAAyB,UAAd9B,EAAwB,OAAS,MAAAvK,IAC9CkS,EAAQhI,EAAAA,GAAAA,MAWL,EAAE5J,GAREuY,EADT3O,EAAAA,GAAoBN,EAAAA,IACpB,CAAC4E,EAAQqK,oBAEDvS,KAAK2O,IACX/K,EAAAA,GACAN,EAAAA,IACiB,UAAdW,EAAwBL,EAAOrD,MAAQqD,EAAOvD,OAH3CL,EAMD3F,CAAF,CAAA,CAxBG,EAAA,OAAAsB,EA4BRuL,QAAQjD,IAAa,IACnBrF,EACmC,CAAC,IAAxC,CAAA,OAAA,OAAgB7E,QAAhBX,CAAA,EAAwD,YAAZ,UAAAgD,EAAAoE,EAAA,GAAApE,EACrBiW,EAAAA,GAAAA,CAAAA,CAAAA,CAH3B,CAAA,EAAAjZ,EAMK2H,QAAQ6C,OAAAA,EAAAA,CAAAA,CC9Ef,SAAA6O,GAAArZ,GAAoC,MAC5B6K,EAAYuD,EAAKvD,UACjB8N,EAAgB9N,EAAUe,MAAM,GAAhBf,EAAqB,GACrCyO,EAAiBzO,EAAUe,MAAM,GAAhBf,EAAqB,GAArBA,GAAAA,EAGH,CAAA,KACZ,CAAE5H,UAAAA,EAAWuH,OAAAA,CAAb,EAAwB4D,EAAKzG,QAC7BwL,EAA0D,CAAC,IAA9C,CAAA,SAAA,OAAkBxS,QAAlBC,CAAA,EACb4E,EAAO2N,EAAa,OAAS,MAC7BtG,EAAcsG,EAAa,QAAU,SAErCoG,EAAe,CAAA5U,MACZ,EAAErD,GAAQ2B,EAAAA,EAAV,EADYqB,IAEd,EAAAhD,GACK2B,EAAAA,GAAkBA,EAAAA,GAAyBuH,EAAAA,EADhD,CAFc,EAAAxK,EAOhB2H,QAAQ6C,OAAAA,EAAAA,GAAAA,EAAyB+O,EAAAA,EAAAA,CAAAA,CAAAA,OAAAA,CAAAA,CChB1C,SAAAC,GAAAxZ,GAAmC,GAC5B2U,GAAmBvG,EAAKK,SAASd,UAAW,OAAQ,iBAApDgH,EAD4B,CAC5BA,IAIC3J,EAAUoD,EAAKzG,QAAQ1E,UACvBwW,EAAQtM,EACZiB,EAAKK,SAASd,UACd1H,GAA8B,oBAAlBA,EAAS0J,IAFTxC,EAGZjD,WAAAA,GAGAc,EAAQ7E,OAASsT,EAAMvT,KACvB8E,EAAQ5E,KAAOqT,EAAMpT,OACrB2E,EAAQ9E,IAAMuT,EAAMtT,QACpB6E,EAAQ3E,MAAQoT,EAAMrT,KACtB,CAAA,GAEIgI,CAAAA,IAAAA,EAAKsL,KAAAA,OAAAA,EAAAA,EAIJA,KAAAA,CAAAA,EANL1Z,EAOK2O,WAAW,uBAAyB,EAZ3C,KAaO,CAAA,GAEDP,CAAAA,IAAAA,EAAKsL,KAAAA,OAAAA,EAAAA,EAIJA,KAAAA,CAAAA,EANA1Z,EAOA2O,WAAW,uBAAA,CAAA,CAAA,CA9BbgG,CA8Ba,OAAA3U,CAAA,CC/BpB,SAAA2Z,GAAA3Z,GAAoC,IAC5B6K,EAAYuD,EAAKvD,UACjB8N,EAAgB9N,EAAUe,MAAM,GAAhBf,EAAqB,GACrC,CAAEL,OAAAA,EAAQvH,UAAAA,CAAV,EAAwBmL,EAAKzG,QAC7B+E,EAAuD,CAAC,IAA9C,CAAA,OAAA,SAAkB/L,QAAlBC,CAAA,EAEVgZ,EAA4D,CAAC,IAA5C,CAAA,MAAA,QAAgBjZ,QAAhBC,CAAA,EAAA,OAAAK,EAEhByL,EAAU,OAAS,OACxBzJ,EAAAA,IACC2W,EAAiBpP,EAAOkC,EAAU,QAAU,UAAY,GADzDzJ,EAGG4H,UAAYmC,EAAAA,CAAAA,EAAAA,EACZrF,QAAQ6C,OAAS/B,EAAAA,CAAAA,EAAAA,CAAAA,CCSxB,IAAAoR,GAAe,CAAAC,MASN,CAAAlV,MAEE,IAFFsJ,QAAA,CAAA,EAAAD,GAAAoL,EAAA,EATMvB,OAwDL,CAAAlT,MAEC,IAFDsJ,QAAA,CAAA,EAAAD,GAAAyK,GAAAZ,OAUE,CAVF,EAxDKiC,gBAsFI,CAAAnV,MAER,IAFQsJ,QAAA,CAAA,EAAAD,GAAA4K,GAAAG,SAAA,CAAA,OAAA,QAAA,MAAA,UAAAtO,QAmBN,EAnBML,kBAyBI,cAzBJ,EAtFJ2P,aA2HC,CAAApV,MAEL,IAFKsJ,QAAA,CAAA,EAAAD,GAAAsJ,EAAA,EA3HDlD,MA8IN,CAAAzP,MAEE,IAFFsJ,QAAA,CAAA,EAAAD,GAAAyG,GAAA9S,QAQI,WARJ,EA9IMqN,KAoKP,CAAArK,MAEG,IAFHsJ,QAAA,CAAA,EAAAD,GAAAoI,GAAAG,SAaM,OAbN9L,QAkBK,EAlBLL,kBAyBe,WAzBf6M,eAAA,CAAA,EAAAE,wBAAA,CAAA,CAAA,EApKO6C,MAuNN,CAAArV,MAEE,IAFFsJ,QAAA,CAAA,EAAAD,GAAA0L,EAAA,EAvNMD,KA0OP,CAAA9U,MAEG,IAFHsJ,QAAA,CAAA,EAAAD,GAAAuL,EAAA,EA1OOU,aAkQC,CAAAtV,MAEL,IAFKsJ,QAAA,CAAA,EAAAD,GAAAwF,GAAAE,gBAAA,CAAA,EAAA5H,EAkBT,SAlBSnG,EAwBT,OAxBS,EAlQDuU,WA4SD,CAAAvV,MAEH,IAFGsJ,QAAA,CAAA,EAAAD,GAAAyE,EAAA0H,OAAAxH,GAAAe,gBAAA,KAAA,CAAA,CA5SC,EAAf0G,GCde,CAAAxP,UAKF,SALEkE,cAAA,CAAA,EAAAwC,cAAA,CAAA,EAAAb,gBAAA,CAAA,EAAAlB,SAgCH,OAhCGD,SA0CH,OA1CG5B,UAAAkM,EAAA,QCbfS,GAO4BC,YAAAva,EAAAI,EASK0O,EAAAA,IAAcR,KAyF7CoD,eAAiB,IAAM8I,sBAAsBlM,KAAKmM,MAA3BD,EAzFsBlM,KAEtCmM,OAASC,EAASpM,KAAKmM,OAAOE,KAAKrM,IAAjB,CAAToM,EAF6BpM,KAKtCQ,QAAAA,EAAAA,GAAe8L,GAAOC,SAAAA,CAAAA,EALgBvM,KAQtCC,MAAQ,CAAAC,YAAA,CAAA,EAAAc,UAAA,CAAA,EAAAgC,cAAA,EAAA,EAR8BhD,KAetCrL,UAAYA,GAAaA,EAAU6X,OAAS7X,EAAU,GAA1CA,EAf0BqL,KAgBtC9D,OAASA,GAAUA,EAAOsQ,OAAStQ,EAAO,GAAjCA,EAhB6B8D,KAmBtCQ,QAAQnB,UAAAA,GAnB8BtG,OAoBpC6D,KAAAA,EAAAA,GACF0P,GAAOC,SAASlN,UAChBmB,EAAQnB,SAAAA,CAAAA,EACVG,QAAQ6B,IAAQrB,KACZQ,QAAQnB,UAAAA,GAAAA,EAAAA,GAEPiN,GAAOC,SAASlN,UAAhBiN,IAAAA,GAEA9L,EAAQnB,UAAYmB,EAAQnB,UAARmB,GAApBA,EAAAA,CARR,CAAA,EApB2CR,KAiCtCX,UAAYtG,OAAO6D,KAAKoD,KAAKQ,QAAQnB,SAAzBtG,EACd8D,IAAIwE,GAAAA,EAAAA,CAAAA,KAAAA,CAAAA,EAEArB,KAAKQ,QAAQnB,UAAb3N,EAAA,CAHUqH,EAMdiE,KAAK,CAAAtL,EAAAI,IAAU4C,EAAE4B,MAAQP,EAAEO,KANbyC,EAjC0BiH,KA6CtCX,UAAUG,QAAQiN,IACjBA,EAAgB7M,SAAWC,EAAW4M,EAAgBX,MAA3BjM,GADSnO,EAEtBoa,OACd9L,KAAKrL,UACLqL,KAAK9D,OACL8D,KAAKQ,QAAAA,EAELR,KAAKC,KAAAA,CAPX,CAAA,EA7C2CD,KA0DtCmM,OAAAA,EAEClJ,EAAgBjD,KAAKQ,QAAQyC,cA5DQtQ,GAAAqN,KA+DpC0M,qBAAAA,EA/DoC1M,KAkEtCC,MAAMgD,cAAAA,CAAAA,CAAAA,SAKJ,OACAkJ,EAAO/Y,KAAK4M,IAAZmM,CAAAA,CAAAA,UAEC,OACDQ,EAAQvZ,KAAK4M,IAAb2M,CAAAA,CAAAA,uBAEc,OACdD,EAAqBtZ,KAAK4M,IAA1B0M,CAAAA,CAAAA,wBAEe,OACfvK,EAAsB/O,KAAK4M,IAA3BmC,CAAAA,CA1FiB,CAAPmK,GAoHZM,OAA2B,aAAlB,OAAOjb,OAAkCkb,OAATlb,QAAiBmb,YApH9CR,GAsHZjF,WAtHYiF,GAAAA,GAwHZC,SAxHYD,kBAAAA","file":"js/js/js/vendor/popper.js.js.js","sourcesContent":["export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n"]}